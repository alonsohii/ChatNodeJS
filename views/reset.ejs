
<!DOCTYPE html><html lang='en' class=''>
        <head><script src='//static.codepen.io/assets/editor/live/console_runner-ce3034e6bde3912cc25f83cccb7caa2b0f976196f2f2d52303a462c826d54a73.js'></script><script src='//static.codepen.io/assets/editor/live/css_live_reload_init-890dc39bb89183d4642d58b1ae5376a0193342f9aed88ea04330dc14c8d52f55.js'></script><meta charset='UTF-8'><meta name="robots" content="noindex"><link rel="shortcut icon" type="image/x-icon" href="//static.codepen.io/assets/favicon/favicon-8ea04875e70c4b0bb41da869e81236e54394d63638a1ef12fa558a4a835f1164.ico" /><link rel="mask-icon" type="" href="//static.codepen.io/assets/favicon/logo-pin-f2d2b6d2c61838f7e76325261b7195c27224080bc099486ddd6dccb469b8e8e6.svg" color="#111" /><link rel="canonical" href="https://codepen.io/keiwo/pen/oeooyY?q=css+array&limit=all&type=type-pens" />
        
            <link rel='stylesheet prefetch' href='https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css'>
            <link rel='stylesheet prefetch' href='css/emotics.css'>
        <style class="cp-pen-styles">
      
        </style></head><body>
        
        <div id="root"></div>
        <script src='//static.codepen.io/assets/common/stopExecutionOnTimeout-b2a7b3fe212eaa732349046d8416e00a9dec26eb7fd347590fbced3ab38af52e.js'></script><script src='https://cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react.min.js'></script><script src='https://cdnjs.cloudflare.com/ajax/libs/react/15.4.2/react-dom.min.js'></script>
        <script >var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) {if (window.CP.shouldStopExecution(1)){break;} var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); }
        window.CP.exitedLoop(1);
         } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
        
        function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
        
        function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
        
        function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
        
        var Display = function (_React$Component) {
            _inherits(Display, _React$Component);
        
            function Display(props) {
                _classCallCheck(this, Display);
        
                return _possibleConstructorReturn(this, (Display.__proto__ || Object.getPrototypeOf(Display)).call(this, props));
            }
        
            _createClass(Display, [{
                key: 'render',
                value: function render() {
        
                    var array = [{ display: 'flex', alignItems: 'flex-start', justifyContent: 'flex-start' }, { display: 'flex', alignItems: 'flex-start', justifyContent: 'center' }, { display: 'flex', alignItems: 'flex-start', justifyContent: 'fle2x-end' }, { display: 'flex', alignItems: 'center', justifyContent: 'flex-start' }, { display: 'flex', alignItems: 'center', justifyContent: 'center' }, { display: 'flex', alignItems: 'center', justifyContent: 'flex-end' }, { display: 'flex', alignItems: 'flex-end', justifyContent: 'flex-start' }, { display: 'flex', alignItems: 'flex-end', justifyContent: 'center' }, { display: 'flex', alignItems: 'flex-end', justifyContent: 'flex-end' }];
                    var css = array[this.props.item];
        
                    return React.createElement(
                        'ul',
                        { className: 'display' },
                        React.createElement(
                            'li',
                            null,
                            ".container {"
                        ),
                        React.createElement(
                            'li',
                            null,
                            'display: ',
                            css.display,
                            ';'
                        ),
                        React.createElement(
                            'li',
                            null,
                            'align-items: ',
                            css.alignItems,
                            ';'
                        ),
                        React.createElement(
                            'li',
                            null,
                            'justify-content: ',
                            css.justifyContent,
                            ';'
                        ),
                        React.createElement(
                            'li',
                            null,
                            "}"
                        )
                    );
                }
            }]);
        
            return Display;
        }(React.Component);
        
        var Placeholder = function (_React$Component2) {
            _inherits(Placeholder, _React$Component2);
        
            function Placeholder(props) {
                _classCallCheck(this, Placeholder);
        
                return _possibleConstructorReturn(this, (Placeholder.__proto__ || Object.getPrototypeOf(Placeholder)).call(this, props));
            }
        
            _createClass(Placeholder, [{
                key: 'render',
                value: function render() {
        
                    var classes = 'placeholder';
                    if (this.props.active) {
                        classes += ' active';
                    }
        
                    return React.createElement('div', { className: classes });
                }
            }]);
        
            return Placeholder;
        }(React.Component);
        
        var Container = function (_React$Component3) {
            _inherits(Container, _React$Component3);
        
            function Container(props) {
                _classCallCheck(this, Container);
        
                return _possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).call(this, props));
            }
        
            _createClass(Container, [{
                key: 'render',
                value: function render() {
                    return React.createElement(
                        'div',
                        { className: 'container' },
                        React.createElement(Placeholder, { active: this.props.item === 0 ? true : false }),
                        React.createElement(Placeholder, { active: this.props.item === 1 ? true : false }),
                        React.createElement(Placeholder, { active: this.props.item === 2 ? true : false }),
                        React.createElement(Placeholder, { active: this.props.item === 3 ? true : false }),
                        React.createElement(Placeholder, { active: this.props.item === 4 ? true : false }),
                        React.createElement(Placeholder, { active: this.props.item === 5 ? true : false }),
                        React.createElement(Placeholder, { active: this.props.item === 6 ? true : false }),
                        React.createElement(Placeholder, { active: this.props.item === 7 ? true : false }),
                        React.createElement(Placeholder, { active: this.props.item === 8 ? true : false })
                    );
                }
            }]);
        
            return Container;
        }(React.Component);
        
        var App = function (_React$Component4) {
            _inherits(App, _React$Component4);
        
            function App(props) {
                _classCallCheck(this, App);
        
                var _this4 = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));
        
                _this4.state = {
                    item: 0
                };
                return _this4;
            }
        
            _createClass(App, [{
                key: 'render',
                value: function render() {
                    return React.createElement(
                        'div',
                        null,
                        React.createElement(Container, { item: this.state.item }),
                        React.createElement(Display, { item: this.state.item })
                    );
                }
            }]);
        
            return App;
        }(React.Component);
        
        ReactDOM.render(React.createElement(App, null), document.getElementById('root'));
        //# sourceURL=pen.js
        </script>
        </body></html>